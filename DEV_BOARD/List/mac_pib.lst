###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.1.8447/W32 for ARM        05/Jul/2015  15:33:21
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Texas Instruments\Z-Stack Mesh
#        1.0.0\Components\mac\high_level\mac_pib.c
#    Command line =  
#        "C:\Texas Instruments\Z-Stack Mesh
#        1.0.0\Components\mac\high_level\mac_pib.c" -D FEATURE_RESET_MACRO -D
#        ewarm -D NWK_AUTO_POLL -D xPOWER_SAVING -D ZTOOL_P1 -D xMT_TASK -D
#        xMT_SYS_FUNC -D xMT_ZDO_FUNC -D LCD_SUPPORTED=TRUE -D
#        CC2538_USE_ALTERNATE_INTERRUPT_MAP=1 --preprocess=cl
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\DEV_BOARD\List\ -lC
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\DEV_BOARD\List\ -lB
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\DEV_BOARD\List\
#        --diag_suppress Pa082 -o
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\DEV_BOARD\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -f
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x07FFF800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=5000 -DQUEUED_POLL_RATE=100
#        -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440) -f
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\f8wEndev.cfg
#        (-DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -e
#        --fpu=None --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\..\Source\ -I
#        "C:\Texas Instruments\Z-Stack Mesh
#        1.0.0\Projects\zstack\ZMain\TI2538DB\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\hal\include\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\hal\target\CC2538\" -I
#        "C:\Texas Instruments\Z-Stack Mesh
#        1.0.0\Components\driverlib\cc2538\inc\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\driverlib\cc2538\source\" -I
#        "C:\Texas Instruments\Z-Stack Mesh
#        1.0.0\Components\bsp\srf06eb_cc2538\drivers\source\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\mac\include\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\mac\high_level\" -I
#        "C:\Texas Instruments\Z-Stack Mesh
#        1.0.0\Components\mac\low_level\srf05\single_chip\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\mac\low_level\srf05\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\mt\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\osal\include\" -I "C:\Texas
#        Instruments\Z-Stack Mesh 1.0.0\Components\services\sdata\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\services\saddr\"
#        -I "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\stack\af\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\stack\nwk\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\stack\sapi\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\stack\sec\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\stack\sys\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\stack\zdo\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\zmac\" -I
#        "C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\zmac\f8w\" -Ol
#    List file    =  
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\DEV_BOARD\List\mac_pib.lst
#    Object file  =  
#        C:\Users\TimT\Documents\SandBox\ZIGBEE_WATCH_dev\DEV_BOARD\Obj\mac_pib.o
#
###############################################################################

C:\Texas Instruments\Z-Stack Mesh 1.0.0\Components\mac\high_level\mac_pib.c
      1          /**************************************************************************************************
      2            Filename:       mac_pib.c
      3            Revised:        $Date: 2014-07-22 11:05:31 -0700 (Tue, 22 Jul 2014) $
      4            Revision:       $Revision: 39478 $
      5          
      6            Description:    This module contains procedures for the MAC PIB.
      7          
      8          
      9            Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /* ------------------------------------------------------------------------------------------------
     41           *                                          Includes
     42           * ------------------------------------------------------------------------------------------------
     43           */
     44          #include "hal_mcu.h"
     45          #include "hal_board.h"
     46          #include "mac_api.h"
     47          #include "mac_spec.h"
     48          #include "mac_low_level.h"
     49          #include "mac_radio_defs.h"
     50          #include "mac_main.h"
     51          #include "mac_pib.h"
     52          #include "OSAL.h"
     53          #include <stddef.h>
     54          
     55          #include "R2R_FlashJT.h"
     56          #if defined( CC26XX ) || defined( CC26XX_PG2 )
     57          #include "R2F_FlashJT.h"
     58          #endif /* CC26XX || CC26XX_PG2 */
     59          
     60          /* ------------------------------------------------------------------------------------------------
     61           *                                           Constants
     62           * ------------------------------------------------------------------------------------------------
     63           */
     64          
     65          /* Attribute index constants, based on attribute ID values from spec */
     66          #define MAC_ATTR_SET1_START       0x40
     67          #define MAC_ATTR_SET1_END         0x5D
     68          #define MAC_ATTR_SET1_OFFSET      0
     69          #define MAC_ATTR_SET2_START       0xE0
     70          #define MAC_ATTR_SET2_END         0xEF
     71          #define MAC_ATTR_SET2_OFFSET      (MAC_ATTR_SET1_END - MAC_ATTR_SET1_START + MAC_ATTR_SET1_OFFSET + 1)
     72          
     73          /* frame response values */
     74          #define MAC_MAX_FRAME_RESPONSE_MIN  143
     75          #define MAC_MAX_FRAME_RESPONSE_MAX  25776
     76          
     77          /* ------------------------------------------------------------------------------------------------
     78           *                                           Typedefs
     79           * ------------------------------------------------------------------------------------------------
     80           */
     81          
     82          /* PIB access and min/max table type */
     83          typedef struct
     84          {
     85            uint8     offset;
     86            uint8     len;
     87            uint8     min;
     88            uint8     max;
     89          } macPibTbl_t;
     90          
     91          /* ------------------------------------------------------------------------------------------------
     92           *                                           Local Variables
     93           * ------------------------------------------------------------------------------------------------
     94           */
     95          
     96          /* PIB default values */

   \                                 In section .rodata, align 4
     97          static CODE const macPib_t macPibDefaults =
   \                     macPibDefaults:
   \   00000000   0x36 0x00          DC8 54, 0, 1, 0, 6, 0, 0, 0
   \              0x01 0x00    
   \              0x06 0x00    
   \              0x00 0x00    
   \   00000008   0x00000000         DC32 0H
   \   0000000C   0x00 0x0F          DC8 0, 15, 0, 0
   \              0x00 0x00    
   \   00000010   0x00000000         DC32 0
   \   00000014   0x00 0x00          DC8 0, 0
   \   00000016   0x0000             DC16 0
   \   00000018   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 3, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x00    
   \   00000020   0xFFFF             DC16 65535
   \   00000022   0x00 0x00          DC8 0, 0, 4, 3
   \              0x04 0x03    
   \   00000026   0xFFFF             DC16 65535
   \   00000028   0x00 0x00          DC8 0, 0
   \   0000002A   0xFFFF             DC16 65535
   \   0000002C   0x0F 0x00          DC8 15, 0
   \   0000002E   0x01F4             DC16 500
   \   00000030   0x00 0x05          DC8 0, 5
   \   00000032   0x04C4             DC16 1220
   \   00000034   0x03 0x20          DC8 3, 32, 0, 1, 0, 0, 11, 0
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x0B 0x00    
   \   0000003C   0x0000             DC16 0
   \   0000003E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 3, 0, 1, 15, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x00    
   \              0x01 0x0F    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000004C   0x00000000         DC32 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \   0000006C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000007C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     98          {
     99            54,                                         /* ackWaitDuration */
    100            FALSE,                                      /* associationPermit */
    101            TRUE,                                       /* autoRequest */
    102            FALSE,                                      /* battLifeExt */
    103            6,                                          /* battLifeExtPeriods */
    104          
    105            NULL,                                       /* *pMacBeaconPayload */
    106            0,                                          /* beaconPayloadLength */
    107            MAC_BO_NON_BEACON,                          /* beaconOrder */
    108            0,                                          /* beaconTxTime */
    109            0,                                          /* bsn */
    110          
    111            {0, SADDR_MODE_EXT},                        /* coordExtendedAddress */
    112            MAC_SHORT_ADDR_NONE,                        /* coordShortAddress */
    113            0,                                          /* dsn */
    114            FALSE,                                      /* gtsPermit */
    115            4,                                          /* maxCsmaBackoffs */
    116          
    117            3,                                          /* minBe */
    118            0xFFFF,                                     /* panId */
    119            FALSE,                                      /* promiscuousMode */
    120            FALSE,                                      /* rxOnWhenIdle */
    121            MAC_SHORT_ADDR_NONE,                        /* shortAddress */
    122          
    123            MAC_SO_NONE,                                /* superframeOrder */
    124            0x01F4,                                     /* transactionPersistenceTime */
    125            FALSE,                                      /* assocciatedPanCoord */
    126            5,                                          /* maxBe */
    127            1220,                                       /* maxFrameTotalWaitTime */
    128          
    129            3,                                          /* maxFrameRetries */
    130            32,                                         /* ResponseWaitTime */
    131            0,                                          /* syncSymbolOffset */
    132            TRUE,                                       /* timeStampSupported */
    133            FALSE,                                      /* securityEnabled */
    134          
    135            /* Proprietary */
    136            0,                                          /* phyTransmitPower */
    137            MAC_CHAN_11,                                /* logicalChannel */
    138            {0, SADDR_MODE_EXT},                        /* extendedAddress */
    139            1,                                          /* altBe */
    140            MAC_BO_NON_BEACON,                          /* deviceBeaconOrder */
    141            0,                                          /* power savings for rf4ce */
    142            0,                                          /* default is frame Ver is always 0, 
    143                                                           except for security enabled packets */
    144            0,                                          /* diagsRxCrcPass */
    145            0,                                          /* diagsRxCrcFail */
    146            0,                                          /* diagsRxBcast */
    147            0,                                          /* diagsTxBcast */
    148            0,                                          /* diagsRxUcast */
    149            0,                                          /* diagsTxUcast */
    150            0,                                          /* diagsTxUcastRetry */
    151            0                                           /* diagsTxUcastFail */
    152          };
    153          
    154          /* PIB access and min/max table.  min/max of 0/0 means not checked; if min/max are
    155           * equal, element is read-only
    156           */

   \                                 In section .rodata, align 4
    157          static CODE const macPibTbl_t macPibTbl[] =
   \                     macPibTbl:
   \   00000000   0x00 0x01          DC8 0, 1, 54, 54, 1, 1, 0, 1, 2, 1, 0, 1, 3, 1, 0, 1, 4, 1, 6, 6, 8, 4
   \              0x36 0x36    
   \              0x01 0x01    
   \              0x00 0x01    
   \              0x02 0x01    
   \              0x00 0x01    
   \              0x03 0x01    
   \              0x00 0x01    
   \              0x04 0x01    
   \              0x06 0x06    
   \              0x08 0x04    
   \   00000016   0x00 0x00          DC8 0, 0, 12, 1, 0, 52, 13, 1, 0, 15, 16, 4, 1, 1, 20, 1, 0, 255, 22, 8
   \              0x0C 0x01    
   \              0x00 0x34    
   \              0x0D 0x01    
   \              0x00 0x0F    
   \              0x10 0x04    
   \              0x01 0x01    
   \              0x14 0x01    
   \              0x00 0xFF    
   \              0x16 0x08    
   \   0000002A   0x00 0x00          DC8 0, 0, 32, 2, 0, 0, 34, 1, 0, 255, 35, 1, 0, 1, 36, 1, 0, 254, 37, 1
   \              0x20 0x02    
   \              0x00 0x00    
   \              0x22 0x01    
   \              0x00 0xFF    
   \              0x23 0x01    
   \              0x00 0x01    
   \              0x24 0x01    
   \              0x00 0xFE    
   \              0x25 0x01    
   \   0000003E   0x00 0x08          DC8 0, 8, 38, 2, 0, 0, 40, 1, 0, 1, 41, 1, 0, 1, 42, 2, 0, 0, 44, 1, 0
   \              0x26 0x02    
   \              0x00 0x00    
   \              0x28 0x01    
   \              0x00 0x01    
   \              0x29 0x01    
   \              0x00 0x01    
   \              0x2A 0x02    
   \              0x00 0x00    
   \              0x2C 0x01    
   \              0x00         
   \   00000053   0x0F 0x2E          DC8 15, 46, 2, 0, 0, 48, 1, 0, 1, 49, 1, 0, 8, 50, 2, 0, 255, 52, 1, 0
   \              0x02 0x00    
   \              0x00 0x30    
   \              0x01 0x00    
   \              0x01 0x31    
   \              0x01 0x00    
   \              0x08 0x32    
   \              0x02 0x00    
   \              0xFF 0x34    
   \              0x01 0x00    
   \   00000067   0x07 0x35          DC8 7, 53, 1, 2, 64, 54, 1, 0, 0, 55, 1, 0, 1, 56, 1, 0, 1, 57, 1, 0
   \              0x01 0x02    
   \              0x40 0x36    
   \              0x01 0x00    
   \              0x00 0x37    
   \              0x01 0x00    
   \              0x01 0x38    
   \              0x01 0x00    
   \              0x01 0x39    
   \              0x01 0x00    
   \   0000007B   0xFF 0x3A          DC8 255, 58, 1, 11, 28, 60, 8, 0, 0, 70, 1, 0, 8, 71, 1, 0, 15, 72, 1
   \              0x01 0x0B    
   \              0x1C 0x3C    
   \              0x08 0x00    
   \              0x00 0x46    
   \              0x01 0x00    
   \              0x08 0x47    
   \              0x01 0x00    
   \              0x0F 0x48    
   \              0x01         
   \   0000008E   0x00 0x01          DC8 0, 1, 73, 1, 0, 255, 76, 4, 0, 0, 80, 4, 0, 0, 84, 4, 0, 0, 88, 4
   \              0x49 0x01    
   \              0x00 0xFF    
   \              0x4C 0x04    
   \              0x00 0x00    
   \              0x50 0x04    
   \              0x00 0x00    
   \              0x54 0x04    
   \              0x00 0x00    
   \              0x58 0x04    
   \   000000A2   0x00 0x00          DC8 0, 0, 92, 4, 0, 0, 96, 4, 0, 0, 100, 4, 0, 0, 104, 4, 0, 0, 108, 32
   \              0x5C 0x04    
   \              0x00 0x00    
   \              0x60 0x04    
   \              0x00 0x00    
   \              0x64 0x04    
   \              0x00 0x00    
   \              0x68 0x04    
   \              0x00 0x00    
   \              0x6C 0x20    
   \   000000B6   0xFF 0xFF          DC8 255, 255
    158          {
    159            {offsetof(macPib_t, ackWaitDuration), sizeof(uint8), 54, 54},                      /* MAC_ACK_WAIT_DURATION */
    160            {offsetof(macPib_t, associationPermit), sizeof(bool), FALSE, TRUE},                /* MAC_ASSOCIATION_PERMIT */
    161            {offsetof(macPib_t, autoRequest), sizeof(bool), FALSE, TRUE},                      /* MAC_AUTO_REQUEST */
    162            {offsetof(macPib_t, battLifeExt), sizeof(bool), FALSE, TRUE},                      /* MAC_BATT_LIFE_EXT */
    163            {offsetof(macPib_t, battLifeExtPeriods), sizeof(uint8), 6, 6},                     /* MAC_BATT_LIFE_EXT_PERIODS */
    164          
    165            {offsetof(macPib_t, pBeaconPayload), sizeof(uint8 *), 0, 0},                       /* MAC_BEACON_PAYLOAD */
    166            {offsetof(macPib_t, beaconPayloadLength), sizeof(uint8), 0, 52},                   /* MAC_BEACON_PAYLOAD_LENGTH */
    167            {offsetof(macPib_t, beaconOrder), sizeof(uint8), 0, 15},                           /* MAC_BEACON_ORDER */
    168            {offsetof(macPib_t, beaconTxTime), sizeof(uint32), 1, 1},                          /* MAC_BEACON_TX_TIME */
    169            {offsetof(macPib_t, bsn), sizeof(uint8), 0x00, 0xFF},                              /* MAC_BSN */
    170          
    171            {offsetof(macPib_t, coordExtendedAddress.addr.extAddr), sizeof(sAddrExt_t), 0, 0}, /* MAC_COORD_EXTENDED_ADDRESS */
    172            {offsetof(macPib_t, coordShortAddress), sizeof(uint16), 0, 0},                     /* MAC_COORD_SHORT_ADDRESS */
    173            {offsetof(macPib_t, dsn), sizeof(uint8), 0x00, 0xFF},                              /* MAC_DSN */
    174            {offsetof(macPib_t, gtsPermit), sizeof(bool), FALSE, TRUE},                        /* MAC_GTS_PERMIT */
    175          
    176            /* Range of maxCsmaBackoffs is between 0 and 5 in IEEE 802.15.4.
    177             * Such restriction is removed here to allow 802.15.4 non-compliant experimental
    178             * applications.
    179             * To be compliant with 802.15.4, application or upper layer must not set this
    180             * PIB attribute out of range of 802.15.4.
    181             * The range is still restricted to 254 since value 255 would cause backoff
    182             * counter to overflow, wrap around and loop infinitely. */
    183            {offsetof(macPib_t, maxCsmaBackoffs), sizeof(uint8), 0, 254},                      /* MAC_MAX_CSMA_BACKOFFS */
    184          
    185            {offsetof(macPib_t, minBe), sizeof(uint8), 0, 8},                                  /* MAC_MIN_BE */
    186            {offsetof(macPib_t, panId), sizeof(uint16), 0, 0},                                 /* MAC_PAN_ID */
    187            {offsetof(macPib_t, promiscuousMode), sizeof(bool), FALSE, TRUE},                  /* MAC_PROMISCUOUS_MODE */
    188            {offsetof(macPib_t, rxOnWhenIdle), sizeof(bool), FALSE, TRUE},                     /* MAC_RX_ON_WHEN_IDLE */
    189            {offsetof(macPib_t, shortAddress), sizeof(uint16), 0, 0},                          /* MAC_SHORT_ADDRESS */
    190          
    191            {offsetof(macPib_t, superframeOrder), sizeof(uint8), 0, 15},                       /* MAC_SUPERFRAME_ORDER */
    192            {offsetof(macPib_t, transactionPersistenceTime), sizeof(uint16), 0, 0},            /* MAC_TRANSACTION_PERSISTENCE_TIME */
    193            {offsetof(macPib_t, associatedPanCoord), sizeof(bool), FALSE, TRUE},               /* MAC_ASSOCIATED_PAN_COORD */
    194          
    195            /* Range of maxBe is between 3 and 8 in IEEE 802.15.4.
    196             * Such restriction is removed here to allow 802.15.4 non-compliant experimental
    197             * applications.
    198             * To be compliant with 802.15.4, application or upper layer must not set this
    199             * PIB attribute out of range of 802.15.4. */
    200            {offsetof(macPib_t, maxBe), sizeof(uint8), 0, 8},                                  /* MAC_MAX_BE */
    201            {offsetof(macPib_t, maxFrameTotalWaitTime), sizeof(uint16), 0x00, 0xFF},           /* MAC_MAX_FRAME_RESPONSE_TIME */
    202          
    203            {offsetof(macPib_t, maxFrameRetries), sizeof(uint8), 0, 7},                        /* MAC_MAX_FRAME_RETRIES */
    204            {offsetof(macPib_t, responseWaitTime), sizeof(uint8), 2, 64},                      /* MAC_RESPONSE_WAIT_TIME */
    205            {offsetof(macPib_t, syncSymbolOffset), sizeof(uint8), 0, 0},                       /* MAC_SYNC_SYMBOL_OFFSET */
    206            {offsetof(macPib_t, timeStampSupported), sizeof(bool), FALSE, TRUE},               /* MAC_TIMESTAMP_SUPPORTED */
    207            {offsetof(macPib_t, securityEnabled), sizeof(bool), FALSE, TRUE},                  /* MAC_SECURITY_ENABLED */
    208          
    209            /* Proprietary PIBs */
    210            {offsetof(macPib_t, phyTransmitPower), sizeof(uint8), 0, 0xFF},                    /* MAC_PHY_TRANSMIT_POWER_SIGNED */
    211            {offsetof(macPib_t, logicalChannel), sizeof(uint8), MAC_CHAN_11, MAC_CHAN_28},     /* MAC_LOGICAL_CHANNEL */
    212            {offsetof(macPib_t, extendedAddress.addr.extAddr), sizeof(sAddrExt_t), 0, 0},      /* MAC_EXTENDED_ADDRESS */
    213            {offsetof(macPib_t, altBe), sizeof(uint8), 0, 8},                                  /* MAC_ALT_BE */
    214            {offsetof(macPib_t, deviceBeaconOrder), sizeof(uint8), 0, 15},                     /* MAC_DEVICE_BEACON_ORDER */
    215            {offsetof(macPib_t, rf4cepowerSavings), sizeof(uint8), 0, 1},                      /* MAC_RF4CE_POWER_SAVINGS */
    216            {offsetof(macPib_t, frameVersionSupport), sizeof(uint8), 0, 0xFF},                 /* MAC_FRAME_VERSION_SUPPORT */
    217            {offsetof(macPib_t, diagsRxCrcPass), sizeof(uint32), 0, 0},                        /* MAC_DIAGS_RX_CRC_PASS */
    218            {offsetof(macPib_t, diagsRxCrcFail), sizeof(uint32), 0, 0},                        /* MAC_DIAGS_RX_CRC_FAIL */
    219            {offsetof(macPib_t, diagsRxBcast), sizeof(uint32), 0, 0},                          /* MAC_DIAGS_RX_BCAST */
    220            {offsetof(macPib_t, diagsTxBcast), sizeof(uint32), 0, 0},                          /* MAC_DIAGS_TX_BCAST */
    221            {offsetof(macPib_t, diagsRxUcast), sizeof(uint32), 0, 0},                          /* MAC_DIAGS_RX_UCAST */
    222            {offsetof(macPib_t, diagsTxUcast), sizeof(uint32), 0, 0},                          /* MAC_DIAGS_TX_UCAST */
    223            {offsetof(macPib_t, diagsTxUcastRetry), sizeof(uint32), 0, 0},                     /* MAC_DIAGS_TX_UCAST_RETRY */
    224            {offsetof(macPib_t, diagsTxUcastFail), sizeof(uint32), 0, 0},                      /* MAC_DIAGS_TX_UCAST_FAIL *//* MAC_DIAGS_TX_UCAST_FAIL */
    225            {offsetof(macPib_t, randomSeed), MAC_RANDOM_SEED_LEN, 0xFF, 0xFF}                  /* MAC_RANDOM_SEED */
    226          };
    227          
    228          /* Invalid PIB table index used for error code */
    229          #define MAC_PIB_INVALID     ((uint8) (sizeof(macPibTbl) / sizeof(macPibTbl[0])))
    230          
    231          /* ------------------------------------------------------------------------------------------------
    232           *                                           Global Variables
    233           * ------------------------------------------------------------------------------------------------
    234           */
    235          
    236          /* MAC PIB */

   \                                 In section .bss, align 4
    237          macPib_t macPib;
   \                     macPib:
   \   00000000                      DS8 140
    238          
    239          extern uint8 MAC_MlmeGetReqSize( uint8 pibAttribute );
    240          
    241          #if defined( FEATURE_MAC_PIB_PTR )
    242          
    243          /* Pointer to the MAC PIB */
    244          macPib_t* pMacPib = &macPib;
    245          
    246          /**************************************************************************************************
    247           * @fn          MAC_MlmeSetActivePib
    248           *
    249           * @brief       This function initializes the PIB.
    250           *
    251           * input parameters
    252           *
    253           * @param       None.
    254           *
    255           * output parameters
    256           *
    257           * None.
    258           *
    259           * @return      None.
    260           **************************************************************************************************
    261           */
    262          void MAC_MlmeSetActivePib( void* pPib )
    263          {
    264            halIntState_t intState;
    265            HAL_ENTER_CRITICAL_SECTION(intState);
    266            pMacPib = (macPib_t *)pPib;
    267            HAL_EXIT_CRITICAL_SECTION(intState);
    268          }
    269          #endif /* FEATURE_MAC_PIB_PTR */
    270          
    271          /**************************************************************************************************
    272           * @fn          macPibReset
    273           *
    274           * @brief       This function initializes the PIB.
    275           *
    276           * input parameters
    277           *
    278           * @param       None.
    279           *
    280           * output parameters
    281           *
    282           * None.
    283           *
    284           * @return      None.
    285           **************************************************************************************************
    286           */

   \                                 In section .text, align 2, keep-with-next
    287          MAC_INTERNAL_API void macPibReset(void)
    288          {
   \                     macPibReset: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
    289            /* Preserve initialized proprietary values. */
    290            uint8 randomSeed[MAC_RANDOM_SEED_LEN];
    291            osal_memcpy(randomSeed, pMacPib->randomSeed, MAC_RANDOM_SEED_LEN);
   \   00000004   0x2220             MOVS     R2,#+32
   \   00000006   0x....             LDR.N    R1,??DataTable3
   \   00000008   0xA800             ADD      R0,SP,#+0
   \   0000000A   0x.... 0x....      BL       osal_memcpy
    292          
    293            /* copy PIB defaults */
    294          #if defined( FEATURE_MAC_PIB_PTR )  
    295            *pMacPib = macPibDefaults;
    296          #else
    297            macPib = macPibDefaults;
   \   0000000E   0x....             LDR.N    R0,??DataTable3_1
   \   00000010   0x....             LDR.N    R1,??DataTable3_2
   \   00000012   0x228C             MOVS     R2,#+140
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy4
    298          #endif /* FEATURE_MAC_PIB_PTR */
    299            
    300            osal_memcpy(pMacPib->randomSeed, randomSeed, MAC_RANDOM_SEED_LEN);
   \   00000018   0x2220             MOVS     R2,#+32
   \   0000001A   0xA900             ADD      R1,SP,#+0
   \   0000001C   0x....             LDR.N    R0,??DataTable3
   \   0000001E   0x.... 0x....      BL       osal_memcpy
    301          
    302            /* initialize random sequence numbers */
    303            pMacPib->dsn = macRadioRandomByte();
   \   00000022   0x.... 0x....      BL       macRadioRandomByte
   \   00000026   0x....             LDR.N    R1,??DataTable3_1
   \   00000028   0xF881 0x0022      STRB     R0,[R1, #+34]
    304            pMacPib->bsn = macRadioRandomByte();
   \   0000002C   0x.... 0x....      BL       macRadioRandomByte
   \   00000030   0x....             LDR.N    R1,??DataTable3_1
   \   00000032   0x7508             STRB     R0,[R1, #+20]
    305          }
   \   00000034   0xB009             ADD      SP,SP,#+36
   \   00000036   0xBD00             POP      {PC}             ;; return
    306          
    307          /**************************************************************************************************
    308           * @fn          macPibIndex
    309           *
    310           * @brief       This function takes an PIB attribute and returns the index in to
    311           *              macPibTbl for the attribute.
    312           *
    313           * input parameters
    314           *
    315           * @param       pibAttribute - PIB attribute to look up.
    316           *
    317           * output parameters
    318           *
    319           * None.
    320           *
    321           * @return      Index in to macPibTbl for the attribute or MAC_PIB_INVALID.
    322           **************************************************************************************************
    323           */

   \                                 In section .text, align 2, keep-with-next
    324          MAC_INTERNAL_API uint8 macPibIndex(uint8 pibAttribute)
    325          {
    326            if ((pibAttribute >= MAC_ATTR_SET1_START) && (pibAttribute <= MAC_ATTR_SET1_END))
   \                     macPibIndex: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0xF1B0 0x0140      SUBS     R1,R0,#+64
   \   00000006   0x291E             CMP      R1,#+30
   \   00000008   0xD202             BCS.N    ??macPibIndex_0
    327            {
    328              return (pibAttribute - MAC_ATTR_SET1_START + MAC_ATTR_SET1_OFFSET);
   \   0000000A   0x3840             SUBS     R0,R0,#+64
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0xE008             B.N      ??macPibIndex_1
    329            }
    330            else if ((pibAttribute >= MAC_ATTR_SET2_START) && (pibAttribute <= MAC_ATTR_SET2_END))
   \                     ??macPibIndex_0: (+1)
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0xF1B0 0x01E0      SUBS     R1,R0,#+224
   \   00000016   0x2910             CMP      R1,#+16
   \   00000018   0xD202             BCS.N    ??macPibIndex_2
    331            {
    332              return (pibAttribute - MAC_ATTR_SET2_START + MAC_ATTR_SET2_OFFSET);
   \   0000001A   0x303E             ADDS     R0,R0,#+62
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xE000             B.N      ??macPibIndex_1
    333            }
    334            else
    335            {
    336              return MAC_PIB_INVALID;
   \                     ??macPibIndex_2: (+1)
   \   00000020   0x202E             MOVS     R0,#+46
   \                     ??macPibIndex_1: (+1)
   \   00000022   0x4770             BX       LR               ;; return
    337            }
    338          }
    339          
    340          
    341          /**************************************************************************************************
    342           * @fn          MAC_MlmeGetReq
    343           *
    344           * @brief       This direct execute function retrieves an attribute value
    345           *              from the MAC PIB.
    346           *
    347           * input parameters
    348           *
    349           * @param       pibAttribute - The attribute identifier.
    350           * @param       pValue - pointer to the attribute value.
    351           *
    352           * output parameters
    353           *
    354           * @param       pValue - pointer to the attribute value.
    355           *
    356           * @return      The status of the request, as follows:
    357           *              MAC_SUCCESS Operation successful.
    358           *              MAC_UNSUPPORTED_ATTRIBUTE Attribute not found.
    359           *
    360           **************************************************************************************************
    361           */

   \                                 In section .text, align 2, keep-with-next
    362          uint8 MAC_MlmeGetReq(uint8 pibAttribute, void *pValue)
    363          {
   \                     MAC_MlmeGetReq: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x000C             MOVS     R4,R1
    364            uint8         i;
    365            halIntState_t intState;
    366          
    367            if ((i = MAP_macPibIndex(pibAttribute)) == MAC_PIB_INVALID)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x.... 0x....      BL       macPibIndex
   \   0000000A   0x0005             MOVS     R5,R0
   \   0000000C   0x0028             MOVS     R0,R5
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x282E             CMP      R0,#+46
   \   00000012   0xD101             BNE.N    ??MAC_MlmeGetReq_0
    368            {
    369              return MAC_UNSUPPORTED_ATTRIBUTE;
   \   00000014   0x20F4             MOVS     R0,#+244
   \   00000016   0xE019             B.N      ??MAC_MlmeGetReq_1
    370            }
    371          
    372            HAL_ENTER_CRITICAL_SECTION(intState);
   \                     ??MAC_MlmeGetReq_0: (+1)
   \   00000018   0x.... 0x....      BL       IntMasterDisable
   \   0000001C   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000020   0xF090 0x0601      EORS     R6,R0,#0x1
    373            osal_memcpy(pValue, (uint8 *) pMacPib + macPibTbl[i].offset, macPibTbl[i].len);
   \   00000024   0x....             LDR.N    R0,??DataTable3_3
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   0000002C   0x7842             LDRB     R2,[R0, #+1]
   \   0000002E   0x....             LDR.N    R0,??DataTable3_1
   \   00000030   0x....             LDR.N    R1,??DataTable3_3
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0xF811 0x1025      LDRB     R1,[R1, R5, LSL #+2]
   \   00000038   0x1809             ADDS     R1,R1,R0
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x.... 0x....      BL       osal_memcpy
    374            HAL_EXIT_CRITICAL_SECTION(intState);
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x2E00             CMP      R6,#+0
   \   00000044   0xD001             BEQ.N    ??MAC_MlmeGetReq_2
   \   00000046   0x.... 0x....      BL       IntMasterEnable
    375            return MAC_SUCCESS;
   \                     ??MAC_MlmeGetReq_2: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \                     ??MAC_MlmeGetReq_1: (+1)
   \   0000004C   0xBD70             POP      {R4-R6,PC}       ;; return
    376          }
    377          
    378          /**************************************************************************************************
    379           * @fn          MAC_MlmeGetReqSize
    380           *
    381           * @brief       This direct execute function gets the MAC PIB attribute size
    382           *
    383           * input parameters
    384           *
    385           * @param       pibAttribute - The attribute identifier.
    386           *
    387           * output parameters
    388           *
    389           * None.
    390           *
    391           * @return      size in bytes
    392           *
    393           **************************************************************************************************
    394           */

   \                                 In section .text, align 2, keep-with-next
    395          uint8 MAC_MlmeGetReqSize( uint8 pibAttribute )
    396          {
   \                     MAC_MlmeGetReqSize: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    397            uint8 index;
    398          
    399            if ((index = MAP_macPibIndex(pibAttribute)) == MAC_PIB_INVALID)
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x.... 0x....      BL       macPibIndex
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000C   0x292E             CMP      R1,#+46
   \   0000000E   0xD101             BNE.N    ??MAC_MlmeGetReqSize_0
    400            {
    401              return 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE004             B.N      ??MAC_MlmeGetReqSize_1
    402            }
    403          
    404            return ( macPibTbl[index].len );
   \                     ??MAC_MlmeGetReqSize_0: (+1)
   \   00000014   0x....             LDR.N    R1,??DataTable3_3
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   0000001C   0x7840             LDRB     R0,[R0, #+1]
   \                     ??MAC_MlmeGetReqSize_1: (+1)
   \   0000001E   0xBD02             POP      {R1,PC}          ;; return
    405          }
    406          
    407          /**************************************************************************************************
    408           * @fn          MAC_MlmeSetReq
    409           *
    410           * @brief       This direct execute function sets an attribute value
    411           *              in the MAC PIB.
    412           *
    413           * input parameters
    414           *
    415           * @param       pibAttribute - The attribute identifier.
    416           * @param       pValue - pointer to the attribute value.
    417           *
    418           * output parameters
    419           *
    420           * None.
    421           *
    422           * @return      The status of the request, as follows:
    423           *              MAC_SUCCESS Operation successful.
    424           *              MAC_UNSUPPORTED_ATTRIBUTE Attribute not found.
    425           *
    426           **************************************************************************************************
    427           */

   \                                 In section .text, align 2, keep-with-next
    428          uint8 MAC_MlmeSetReq(uint8 pibAttribute, void *pValue)
    429          {
   \                     MAC_MlmeSetReq: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
    430            uint8         i;
    431            halIntState_t intState;
    432          
    433            if (pibAttribute == MAC_BEACON_PAYLOAD)
   \   00000006   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000008   0x2D45             CMP      R5,#+69
   \   0000000A   0xD103             BNE.N    ??MAC_MlmeSetReq_0
    434            {
    435              pMacPib->pBeaconPayload = pValue;
   \   0000000C   0x....             LDR.N    R0,??DataTable3_1
   \   0000000E   0x6084             STR      R4,[R0, #+8]
    436              return MAC_SUCCESS;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE0A0             B.N      ??MAC_MlmeSetReq_1
    437            }
    438          
    439            /* look up attribute in PIB table */
    440            if ((i = MAP_macPibIndex(pibAttribute)) == MAC_PIB_INVALID)
   \                     ??MAC_MlmeSetReq_0: (+1)
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       macPibIndex
   \   0000001C   0x0006             MOVS     R6,R0
   \   0000001E   0x0030             MOVS     R0,R6
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x282E             CMP      R0,#+46
   \   00000024   0xD101             BNE.N    ??MAC_MlmeSetReq_2
    441            {
    442              return MAC_UNSUPPORTED_ATTRIBUTE;
   \   00000026   0x20F4             MOVS     R0,#+244
   \   00000028   0xE095             B.N      ??MAC_MlmeSetReq_1
    443            }
    444          
    445            /* do range check; no range check if min and max are zero */
    446            if ((macPibTbl[i].min != 0) || (macPibTbl[i].max != 0))
   \                     ??MAC_MlmeSetReq_2: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable3_3
   \   0000002C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000032   0x7880             LDRB     R0,[R0, #+2]
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD106             BNE.N    ??MAC_MlmeSetReq_3
   \   00000038   0x....             LDR.N    R0,??DataTable3_3
   \   0000003A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003C   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000040   0x78C0             LDRB     R0,[R0, #+3]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD02A             BEQ.N    ??MAC_MlmeSetReq_4
    447            {
    448              /* if min == max, this is a read-only attribute */
    449              if (macPibTbl[i].min == macPibTbl[i].max)
   \                     ??MAC_MlmeSetReq_3: (+1)
   \   00000046   0x....             LDR.N    R0,??DataTable3_3
   \   00000048   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000004A   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   0000004E   0x7880             LDRB     R0,[R0, #+2]
   \   00000050   0x....             LDR.N    R1,??DataTable3_3
   \   00000052   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000054   0xEB11 0x0186      ADDS     R1,R1,R6, LSL #+2
   \   00000058   0x78C9             LDRB     R1,[R1, #+3]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xD101             BNE.N    ??MAC_MlmeSetReq_5
    450              {
    451                return MAC_READ_ONLY;
   \   0000005E   0x20FB             MOVS     R0,#+251
   \   00000060   0xE079             B.N      ??MAC_MlmeSetReq_1
    452              }
    453          
    454              /* check for special cases */
    455              if (pibAttribute == MAC_MAX_FRAME_TOTAL_WAIT_TIME)
   \                     ??MAC_MlmeSetReq_5: (+1)
   \   00000062   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000064   0x2D58             CMP      R5,#+88
   \   00000066   0xD107             BNE.N    ??MAC_MlmeSetReq_6
    456              {
    457                if ((*((uint16 *) pValue) < MAC_MAX_FRAME_RESPONSE_MIN) ||
    458                    (*((uint16 *) pValue) > MAC_MAX_FRAME_RESPONSE_MAX))
   \   00000068   0x8820             LDRH     R0,[R4, #+0]
   \   0000006A   0x388F             SUBS     R0,R0,#+143
   \   0000006C   0xF246 0x4122      MOVW     R1,#+25634
   \   00000070   0x4288             CMP      R0,R1
   \   00000072   0xD301             BCC.N    ??MAC_MlmeSetReq_6
    459                {
    460                  return MAC_INVALID_PARAMETER;
   \   00000074   0x20E8             MOVS     R0,#+232
   \   00000076   0xE06E             B.N      ??MAC_MlmeSetReq_1
    461                }
    462              }
    463          
    464              /* range check for general case */
    465              if ((*((uint8 *) pValue) < macPibTbl[i].min) || (*((uint8 *) pValue) > macPibTbl[i].max))
   \                     ??MAC_MlmeSetReq_6: (+1)
   \   00000078   0x7820             LDRB     R0,[R4, #+0]
   \   0000007A   0x....             LDR.N    R1,??DataTable3_3
   \   0000007C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000007E   0xEB11 0x0186      ADDS     R1,R1,R6, LSL #+2
   \   00000082   0x7889             LDRB     R1,[R1, #+2]
   \   00000084   0x4288             CMP      R0,R1
   \   00000086   0xD307             BCC.N    ??MAC_MlmeSetReq_7
   \   00000088   0x....             LDR.N    R0,??DataTable3_3
   \   0000008A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008C   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000090   0x78C0             LDRB     R0,[R0, #+3]
   \   00000092   0x7821             LDRB     R1,[R4, #+0]
   \   00000094   0x4288             CMP      R0,R1
   \   00000096   0xD201             BCS.N    ??MAC_MlmeSetReq_4
    466              {
    467                return MAC_INVALID_PARAMETER;
   \                     ??MAC_MlmeSetReq_7: (+1)
   \   00000098   0x20E8             MOVS     R0,#+232
   \   0000009A   0xE05C             B.N      ??MAC_MlmeSetReq_1
    468              }
    469          
    470            }
    471          
    472            /* set value in PIB */
    473            HAL_ENTER_CRITICAL_SECTION(intState);
   \                     ??MAC_MlmeSetReq_4: (+1)
   \   0000009C   0x.... 0x....      BL       IntMasterDisable
   \   000000A0   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000000A4   0xF090 0x0701      EORS     R7,R0,#0x1
    474            osal_memcpy((uint8 *) pMacPib + macPibTbl[i].offset, pValue, macPibTbl[i].len);
   \   000000A8   0x....             LDR.N    R0,??DataTable3_3
   \   000000AA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000AC   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   000000B0   0x7842             LDRB     R2,[R0, #+1]
   \   000000B2   0x0021             MOVS     R1,R4
   \   000000B4   0x....             LDR.N    R0,??DataTable3_1
   \   000000B6   0x....             LDR.N    R3,??DataTable3_3
   \   000000B8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BA   0xF813 0x3026      LDRB     R3,[R3, R6, LSL #+2]
   \   000000BE   0x1818             ADDS     R0,R3,R0
   \   000000C0   0x.... 0x....      BL       osal_memcpy
    475            HAL_EXIT_CRITICAL_SECTION(intState);
   \   000000C4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C6   0x2F00             CMP      R7,#+0
   \   000000C8   0xD001             BEQ.N    ??MAC_MlmeSetReq_8
   \   000000CA   0x.... 0x....      BL       IntMasterEnable
    476          
    477            /* handle special cases */
    478            switch (pibAttribute)
   \                     ??MAC_MlmeSetReq_8: (+1)
   \   000000CE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D0   0x2D50             CMP      R5,#+80
   \   000000D2   0xD00E             BEQ.N    ??MAC_MlmeSetReq_9
   \   000000D4   0x2D52             CMP      R5,#+82
   \   000000D6   0xD016             BEQ.N    ??MAC_MlmeSetReq_10
   \   000000D8   0x2D53             CMP      R5,#+83
   \   000000DA   0xD00F             BEQ.N    ??MAC_MlmeSetReq_11
   \   000000DC   0x2DE0             CMP      R5,#+224
   \   000000DE   0xD029             BEQ.N    ??MAC_MlmeSetReq_12
   \   000000E0   0x2DE1             CMP      R5,#+225
   \   000000E2   0xD01D             BEQ.N    ??MAC_MlmeSetReq_13
   \   000000E4   0x2DE2             CMP      R5,#+226
   \   000000E6   0xD021             BEQ.N    ??MAC_MlmeSetReq_14
   \   000000E8   0x2DE5             CMP      R5,#+229
   \   000000EA   0xD029             BEQ.N    ??MAC_MlmeSetReq_15
   \   000000EC   0x2DE6             CMP      R5,#+230
   \   000000EE   0xD02C             BEQ.N    ??MAC_MlmeSetReq_16
   \   000000F0   0xE030             B.N      ??MAC_MlmeSetReq_17
    479            {
    480              case MAC_PAN_ID:
    481                /* set pan id in radio */
    482                macRadioSetPanID(pMacPib->panId);
   \                     ??MAC_MlmeSetReq_9: (+1)
   \   000000F2   0x....             LDR.N    R0,??DataTable3_1
   \   000000F4   0x8CC0             LDRH     R0,[R0, #+38]
   \   000000F6   0x.... 0x....      BL       macRadioSetPanID
    483                break;
   \   000000FA   0xE02B             B.N      ??MAC_MlmeSetReq_18
    484          
    485              case MAC_SHORT_ADDRESS:
    486                /* set short address in radio */
    487                macRadioSetShortAddr(pMacPib->shortAddress);
   \                     ??MAC_MlmeSetReq_11: (+1)
   \   000000FC   0x....             LDR.N    R0,??DataTable3_1
   \   000000FE   0x8D40             LDRH     R0,[R0, #+42]
   \   00000100   0x.... 0x....      BL       macRadioSetShortAddr
    488                break;
   \   00000104   0xE026             B.N      ??MAC_MlmeSetReq_18
    489          
    490              case MAC_RX_ON_WHEN_IDLE:
    491                /* turn rx on or off */
    492                if (pMacPib->rxOnWhenIdle)
   \                     ??MAC_MlmeSetReq_10: (+1)
   \   00000106   0x....             LDR.N    R0,??DataTable3_1
   \   00000108   0xF890 0x0029      LDRB     R0,[R0, #+41]
   \   0000010C   0x2800             CMP      R0,#+0
   \   0000010E   0xD003             BEQ.N    ??MAC_MlmeSetReq_19
    493                {
    494                  macRxEnable(MAC_RX_WHEN_IDLE);
   \   00000110   0x2002             MOVS     R0,#+2
   \   00000112   0x.... 0x....      BL       macRxEnable
   \   00000116   0xE002             B.N      ??MAC_MlmeSetReq_20
    495                }
    496                else
    497                {
    498                  macRxDisable(MAC_RX_WHEN_IDLE);
   \                     ??MAC_MlmeSetReq_19: (+1)
   \   00000118   0x2002             MOVS     R0,#+2
   \   0000011A   0x.... 0x....      BL       macRxDisable
    499                }
    500                break;
   \                     ??MAC_MlmeSetReq_20: (+1)
   \   0000011E   0xE019             B.N      ??MAC_MlmeSetReq_18
    501          
    502              case MAC_LOGICAL_CHANNEL:
    503                macRadioSetChannel(pMacPib->logicalChannel);
   \                     ??MAC_MlmeSetReq_13: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable3_1
   \   00000122   0xF890 0x003A      LDRB     R0,[R0, #+58]
   \   00000126   0x.... 0x....      BL       macRadioSetChannel
    504                break;
   \   0000012A   0xE013             B.N      ??MAC_MlmeSetReq_18
    505          
    506              case MAC_EXTENDED_ADDRESS:
    507                /* set ext address in radio */
    508                macRadioSetIEEEAddr(pMacPib->extendedAddress.addr.extAddr);
   \                     ??MAC_MlmeSetReq_14: (+1)
   \   0000012C   0x....             LDR.N    R0,??DataTable3_4
   \   0000012E   0x.... 0x....      BL       macRadioSetIEEEAddr
    509                break;
   \   00000132   0xE00F             B.N      ??MAC_MlmeSetReq_18
    510          
    511              case MAC_PHY_TRANSMIT_POWER_SIGNED:
    512                (void)macRadioSetTxPower(pMacPib->phyTransmitPower);
   \                     ??MAC_MlmeSetReq_12: (+1)
   \   00000134   0x....             LDR.N    R0,??DataTable3_1
   \   00000136   0xF890 0x0039      LDRB     R0,[R0, #+57]
   \   0000013A   0x.... 0x....      BL       macRadioSetTxPower
    513                break;
   \   0000013E   0xE009             B.N      ??MAC_MlmeSetReq_18
    514          
    515              case MAC_RF4CE_POWER_SAVINGS:
    516                pMacPib->rf4cepowerSavings = *(uint8 *)pValue;
   \                     ??MAC_MlmeSetReq_15: (+1)
   \   00000140   0x7820             LDRB     R0,[R4, #+0]
   \   00000142   0x....             LDR.N    R1,??DataTable3_1
   \   00000144   0xF881 0x0048      STRB     R0,[R1, #+72]
    517                break;
   \   00000148   0xE004             B.N      ??MAC_MlmeSetReq_18
    518           
    519              case MAC_FRAME_VERSION_SUPPORT:
    520                pMacPib->frameVersionSupport = *(uint8 *)pValue;
   \                     ??MAC_MlmeSetReq_16: (+1)
   \   0000014A   0x7820             LDRB     R0,[R4, #+0]
   \   0000014C   0x....             LDR.N    R1,??DataTable3_1
   \   0000014E   0xF881 0x0049      STRB     R0,[R1, #+73]
    521                break;
   \   00000152   0xE7FF             B.N      ??MAC_MlmeSetReq_18
    522          
    523              default:
    524                break;
    525            }
    526          
    527            return MAC_SUCCESS;
   \                     ??MAC_MlmeSetReq_17: (+1)
   \                     ??MAC_MlmeSetReq_18: (+1)
   \   00000154   0x2000             MOVS     R0,#+0
   \                     ??MAC_MlmeSetReq_1: (+1)
   \   00000156   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    528          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     macPib+0x6C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     macPib

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     macPibDefaults

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     macPibTbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     macPib+0x3C
    529          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   MAC_MlmeGetReq
        16   -> IntMasterDisable
        16   -> IntMasterEnable
        16   -> macPibIndex
        16   -> osal_memcpy
       8   MAC_MlmeGetReqSize
         8   -> macPibIndex
      24   MAC_MlmeSetReq
        24   -> IntMasterDisable
        24   -> IntMasterEnable
        24   -> macPibIndex
        24   -> macRadioSetChannel
        24   -> macRadioSetIEEEAddr
        24   -> macRadioSetPanID
        24   -> macRadioSetShortAddr
        24   -> macRadioSetTxPower
        24   -> macRxDisable
        24   -> macRxEnable
        24   -> osal_memcpy
       0   macPibIndex
      40   macPibReset
        40   -> __aeabi_memcpy4
        40   -> macRadioRandomByte
        40   -> osal_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
      78  MAC_MlmeGetReq
      32  MAC_MlmeGetReqSize
     344  MAC_MlmeSetReq
     140  macPib
     140  macPibDefaults
      36  macPibIndex
      56  macPibReset
     184  macPibTbl

 
 140 bytes in section .bss
 324 bytes in section .rodata
 566 bytes in section .text
 
 566 bytes of CODE  memory
 324 bytes of CONST memory
 140 bytes of DATA  memory

Errors: none
Warnings: none
